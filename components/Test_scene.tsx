/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, PerspectiveCamera, useAnimations } from '@react-three/drei'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/test_scene.gltf')
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[-2.21, 1.16, -3.63]} scale={0.69}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.lighting_logo.geometry}
          material={nodes.lighting_logo.material}
          position={[-0.23, 0.5, -0.04]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={[3.17, 3.17, 3.17]}
        />
      </group>
      <group position={[-4.8, 1.13, 0.33]} />
      <group position={[-4.8, 1.13, -3.11]} />
      <group position={[-1.88, 1.13, -1.34]} rotation={[0, -1.56, 0]} />
      <group position={[-3.84, 1.13, 3.66]} rotation={[Math.PI, -1.2, Math.PI]} />
      <primitive object={nodes.mixamorigHips} />
      <primitive object={nodes.mixamorigHips001} />
      <primitive object={nodes.mixamorigHips002} />
     
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.walls.geometry}
        material={nodes.walls.material}
        position={[-0.2, 0, 0.66]}
        scale={[2.49, 1.55, 2.49]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.glass_partition.geometry}
        material={materials['Material #607']}
        position={[3.27, 0, 0.8]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.columm_light.geometry}
        material={nodes.columm_light.material}
        position={[1.15, 1.89, 0.81]}
        rotation={[Math.PI / 2, 0, Math.PI / 2]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cast_shadow_red.geometry}
        material={materials.Base_red}
        position={[4.48, 0, 3.75]}
        rotation={[-Math.PI, -1.57, 0]}
        scale={[176.88, -176.88, 176.88]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.floor.geometry}
        material={nodes.floor.material}
        position={[-0.2, 0, 0.66]}
        scale={[2.49, 1.55, 2.49]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cast_shadow_white.geometry}
        material={nodes.cast_shadow_white.material}
        position={[4.72, 1.52, 2.16]}
        rotation={[Math.PI / 2, 0, Math.PI / 2]}
      />
      <skinnedMesh
        geometry={nodes.Box072.geometry}
        material={nodes.Box072.material}
        skeleton={nodes.Box072.skeleton}
        position={[-2.5, 0, -8.07]}
        rotation={[Math.PI, -0.2, Math.PI]}
      />
      <skinnedMesh
        geometry={nodes.Box073.geometry}
        material={nodes.Box073.material}
        skeleton={nodes.Box073.skeleton}
        position={[2.16, -0.19, 1.22]}
        rotation={[0, 0.04, 0]}
      />
      <skinnedMesh
        geometry={nodes.Box074.geometry}
        material={nodes.Box074.material}
        skeleton={nodes.Box074.skeleton}
        position={[0.16, 0, -0.43]}
        rotation={[Math.PI, -0.2, Math.PI]}
      />
    </group>
  )
}

useGLTF.preload('/test_scene.gltf')
